<project name="FlansMod" default="main">
	<property environment="env"/>
	<!-- Properties -->

	<property name="build.dir" value="build"/>
	<property name="src.dir" value="src"/>
	<property name="resources.dir" value="${src.dir}/minecraft/assets"/>

	<property name="download.dir" value="${build.dir}/download"/>

	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="output.dir" value="${build.dir}/bin"/>
	<property name="jar.dir" value="${output.dir}/mods"/>

	<property name="forge.dir" value="${build.dir}/forge"/>
	<property name="mcp.dir" value="${forge.dir}/mcp"/>

	<property name="mcpsrc.dir" value="${mcp.dir}/src"/>
	
	<property name="mcpflan.dir" value="${mcp.dir}/jars/Flan"/>
	<property name="reobfmodels.dir" value="${mcp.dir}/reobf/minecraft/co/uk/flansmods/client/model"/>
	
	<property name="packmodels.dir" value="co/uk/flansmods/client/model"/>
	
	<property name="packs.dir" value="${output.dir}/Flan"/>
    
    <!-- Get version numbers -->
    <property file="build.properties" />
    
    <property name="flansmod.verion" value="${flansmod.version}" />
	<property name="mc.version" value="${mc.version}"/>
	<property name="forge.version" value="${forge.version}"/>


	<property name="forge.name" value="minecraftforge-src-${mc.version}-${forge.version}.zip"/>

	<available property="forge-exists" file="${download.dir}/${forge.name}"/>

	<condition property="out-of-date">
		<not>
			<and>
				<isset property="forge-exists"/>
				<available file="${mcpsrc.dir}"/>
			</and>
		</not>
	</condition>

	<mkdir dir="${download.dir}"/>

	<!-- Targets -->

	<!-- Clear build directory -->
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<!-- Download necessary files -->
	<target name="download-files" depends="download-forge"/>

	<!-- Download forge (if it doesn't exist) -->
	<target name="download-forge" unless="forge-exists">
		<get src="http://files.minecraftforge.net/${forge.name}" dest="${download.dir}" usetimestamp="True"/>
	</target>

	<!-- Setup mcp and forge -->
	<target name="setup" depends="download-files" if="out-of-date">

		<delete dir="${forge.dir}" failonerror="false"/>

		<unzip dest="${forge.dir}/.." src="${download.dir}/${forge.name}"/>

		<!-- Fix executable permissions -->
		<chmod dir="${forge.dir}" perm="ugo+rx" includes="**.sh"/>

		<!-- Install forge -->
		<exec dir="${forge.dir}" executable="cmd" osfamily="windows">
			<arg line="/c install.cmd"/>
		</exec>

		<exec dir="${forge.dir}" executable="sh" osfamily="unix">
			<arg value="install.sh"/>
		</exec>

	</target>

	<target name="clean-src">
		<delete verbose="true">
			<fileset dir="${mcpsrc.dir}/minecraft">
				<present present="both" targetdir="${src.dir}/minecraft" /> 
			</fileset>
		</delete>
	</target>
	<target name="copy-src" depends="clean-src">
		<!-- Copy sources -->
		<copy todir="${mcpsrc.dir}/minecraft" verbose="true">
			<fileset dir="${src.dir}/minecraft"/>
			<filterset>
				<filter token="VERSION" value="${flansmod.version}" />
				<filter token="MCVERSION" value="${mc.version}" />
			</filterset>
		</copy>
	</target>

	<target name="compile" depends="setup,copy-src">

		<mkdir dir="${classes.dir}"/>
		<delete includeemptydirs="true">
			<fileset dir="${classes.dir}" includes="**/*"/>
		</delete>

		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh"/>
		</exec>

		<!-- Check for failure -->
		<fail message="MCP failed to build">
			<condition>
				<resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
			</condition>
		</fail>

	</target>

	<target name="reobf" depends="compile">

		<!-- Reobfuscate -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate_srg.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate_srg.sh"/>
		</exec>

		<!-- Copy classes -->
		<copy todir="${classes.dir}">
			<fileset dir="${mcp.dir}/reobf/minecraft">
				<exclude name="**/nerf/**"/>
				<exclude name="**/ww2/**"/>
				<exclude name="**/yeolde/**"/>
			</fileset>
		</copy>
        
        <!-- Copy forge mod info files -->
        <copy todir="${classes.dir}">
            <fileset file="${src.dir}/minecraft/flansmod.png"/>
            <fileset file="${mcpsrc.dir}/minecraft/mcmod.info"/>
			<fileset file="${mcpsrc.dir}/minecraft/pack.mcmeta"/>
        </copy>
        
		<!-- Copy resources -->
		<copy todir="${classes.dir}/assets">
			<fileset dir="${resources.dir}"/>
		</copy>

		<!-- Reset src dir to post-forge-install state -->
		<delete dir="${mcpsrc.dir}/minecraft/co"/>
		<delete dir="${mcpsrc.dir}/minecraft/icbm"/>
		<delete dir="${mcpsrc.dir}/minecraft/universalelectricity"/>
		<delete dir="${mcpsrc.dir}/minecraft/assets"/>
		<delete file="${mcpsrc.dir}/minecraft/flansmod.png"/>
		<delete file="${mcpsrc.dir}/minecraft/mcmod.info"/>

	</target>

	<!-- Package the compiled files -->
	<target name="package" depends="reobf">

		<delete dir="${jar.dir}"/>
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/FlansMod-${flansmod.version}.jar" basedir="${classes.dir}"/>

	</target>

	<target name="run">

		<!-- Start Client -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c startclient.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="startclient.sh"/>
		</exec>

	</target>

	<target name="test-run" depends="compile,run"/>
    
    
	<target name="packs" depends="reobf,packagepacks"/>
    <target name="packagepacks">
	
		<!-- Flans packs packaging -->
		<mkdir dir="${packs.dir}"/>
		<mkdir dir="${mcpflan.dir}"/>
		
		<!-- Modern Warfare -->
		<delete dir="${mcpflan.dir}/Modern Weapons Pack"/>
		<mkdir dir="${mcpflan.dir}/Modern Weapons Pack/${packmodels.dir}/mw"/>
		<copy todir="${mcpflan.dir}/Modern Weapons Pack">
			<fileset dir="jars/Flan/Modern Weapons Pack"/>
		</copy>
		<copy todir="${mcpflan.dir}/Modern Weapons Pack/${packmodels.dir}/mw" failonerror="false">
			<fileset dir="${reobfmodels.dir}/mw"/>
		</copy>
		<zip destfile="${packs.dir}/Modern Weapons Pack.zip" basedir="${mcpflan.dir}/Modern Weapons Pack"/>
		
		<!-- Nerf -->
		<delete dir="${mcpflan.dir}/Nerf Pack"/>
		<mkdir dir="${mcpflan.dir}/Nerf Pack/${packmodels.dir}/nerf"/>
		<copy todir="${mcpflan.dir}/Nerf Pack">
			<fileset dir="jars/Flan/Nerf Pack"/>
		</copy>
		<copy todir="${mcpflan.dir}/Nerf Pack/${packmodels.dir}/nerf" failonerror="false">
			<fileset dir="${reobfmodels.dir}/nerf"/>
		</copy>
		<zip destfile="${packs.dir}/Nerf Pack.zip" basedir="${mcpflan.dir}/Nerf Pack"/>
		
		<!-- Parts -->
		<delete dir="${mcpflan.dir}/Parts Pack"/>
		<mkdir dir="${mcpflan.dir}/Parts Pack/${packmodels.dir}/parts"/>
		<copy todir="${mcpflan.dir}/Parts Pack">
			<fileset dir="jars/Flan/Parts Pack"/>
		</copy>
		<copy todir="${mcpflan.dir}/Parts Pack/${packmodels.dir}/parts" failonerror="false">
			<fileset dir="${reobfmodels.dir}/parts"/>
		</copy>
		<zip destfile="${packs.dir}/Parts Pack.zip" basedir="${mcpflan.dir}/Parts Pack"/>
		
		<!-- WW2 -->
		<delete dir="${mcpflan.dir}/WW2 Pack"/>
		<mkdir dir="${mcpflan.dir}/WW2 Pack/${packmodels.dir}/ww2"/>
		<copy todir="${mcpflan.dir}/WW2 Pack">
			<fileset dir="jars/Flan/WW2 Pack"/>
		</copy>
		<copy todir="${mcpflan.dir}/WW2 Pack/${packmodels.dir}/ww2" failonerror="false">
			<fileset dir="${reobfmodels.dir}/ww2"/>
		</copy>
		<zip destfile="${packs.dir}/WW2 Pack.zip" basedir="${mcpflan.dir}/WW2 Pack"/>
		
		<!-- Ye Olde -->
		<delete dir="${mcpflan.dir}/Ye Olde Pack"/>
		<mkdir dir="${mcpflan.dir}/Ye Olde Pack/${packmodels.dir}/yeolde"/>
		<copy todir="${mcpflan.dir}/Ye Olde Pack">
			<fileset dir="jars/Flan/Ye Olde Pack"/>
		</copy>
		<copy todir="${mcpflan.dir}/Ye Olde Pack/${packmodels.dir}/yeolde" failonerror="false">
			<fileset dir="${reobfmodels.dir}/yeolde"/>
		</copy>
		<zip destfile="${packs.dir}/Ye Olde Pack.zip" basedir="${mcpflan.dir}/Ye Olde Pack"/>
	</target>
	
	<!-- Target for full releases -->
	<target name="full" depends="package,packagepacks"/>
	
	<!-- Default target to run -->
	<target name="main" depends="package"/>
</project>